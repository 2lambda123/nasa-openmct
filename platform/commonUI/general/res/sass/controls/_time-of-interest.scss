/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2016, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/

.l-toi-holder,
.l-toi-holder:after,
.l-toi-holder:before,
.l-toi,
.l-toi-val {
    display: block;
    position: absolute;
}

.l-toi-holder {
    $p: 3px;
    @include transform(translateX(-50%));
    color: $toiColorBg;
    position: absolute;
    top: 0;
    bottom: 0;
    width: $toiW;
    &:not(.pinned) {
        opacity: 0;
        pointer-events: none;
    }

    &.pinned {
        opacity: 1;
    }

    &:before,
    &:after {
        // Vertical lines. TC uses both; plot only uses :before
        border-left: 1px dashed $toiColorBg;
        box-sizing: border-box;
        content: '';
        display: block;
        left: 50%;
        position: absolute;
        top: 0;
        bottom: 0;
        width: 2px;
    }

    .l-toi {
        // Holds clock icon an unpin button
        font-size: $toiW;
        height: $toiW;
        width: $toiW;
        .t-button-unpin {
            color: $toiColorBg;
            @extend .icon-clock;
            &:hover {
                &:before {
                    content: $glyph-icon-x-in-circle;
                }
            }
        }
    }

    .l-toi-val {
        $tbP: 1px;
        background-color: $toiColorBg;
        border-radius: $controlCr;
        box-sizing: content-box;
        display: inline-block;
        color: $toiColorFg;
        font-size: 0.7rem;
        font-weight: 400;
        height: $toiW;
        right: $toiW + $interiorMarginSm;
        top: 50%;
        @include transform(translateY(-50%));
        line-height: $toiW;
        padding: $tbP $p;
        white-space: nowrap;
    }

    &.val-to-right {
        .l-toi-val {
            right: auto;
            left: $toiW + $interiorMarginSm;
        }
    }
}

// TOI in tables
.tabular,
table {
    tbody, .tbody {
        tr, .tr {
            &.l-toi.pinned {
                border-top: 1px dashed $toiColorBg;
                td, .td {
                    &:first-child:before {
                        @extend .icon-clock;
                        @include transform(translate(-50%, -50%));
                        color: $toiColorBg;
                        cursor: pointer;
                        display: block;
                        position: absolute;
                        left: 50%;
                        bottom: auto;
                        text-shadow: 0 1px 15px black;
                        top: 0;
                        z-index: 2;
                    }
                }

                &:hover {
                    td, .td {
                        &:first-child:before {
                            content: $glyph-icon-x-in-circle !important;
                        }
                    }
                }
            }
        }
    }
}

// TOI in plots
.gl-plot {
    .gl-plot-wrapper-display-area-and-x-axis {
        .l-toi-holder {
            bottom: nth($plotDisplayArea, 3) - $interiorMargin;
            z-index: 3;
            &:after {
                display: none;
            }

            .l-toi {
                @include transform(translateY(100%));
                bottom: 0;
            }
        }
    }
}