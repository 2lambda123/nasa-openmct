/*****************************************************************************
 * Open MCT, Copyright (c) 2014-2016, United States Government
 * as represented by the Administrator of the National Aeronautics and Space
 * Administration. All rights reserved.
 *
 * Open MCT is licensed under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * http://www.apache.org/licenses/LICENSE-2.0.
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 *
 * Open MCT includes source code licensed under additional open source
 * licenses. See the Open Source Licenses file (LICENSES.md) included with
 * this source code distribution or the Licensing information page available
 * at runtime from the About dialog for additional information.
 *****************************************************************************/


/*
Plots
-toi-holder:before vertical line
-toi: glyphs

Tables
tr: border color
td:before: glyphs

TC
-toi-holder:before, after: vertical lines
-toi: glyphs

*/
.l-toi-holder,
.l-toi-holder:after,
.l-toi-holder:before,
.l-toi {
    display: block;
    position: absolute;
}


.l-toi-holder {
    @include trans-prop-nice($props: opacity, $dur: 200ms);
    @include transform(translateX(-50%));
    color: $toiColorBg;
    position: absolute;
    top: 0;
    bottom: 0;
    width: $toiW; // Needs to be an even number to avoid sub-pixel antialiasing of the vertical line
    &:not(.pinned) {
        opacity: 0;
        pointer-events: none;
    }
    &.pinned {
        opacity: 1;
    }
    &:before,
    &:after {
        // Vertical lines. TC uses both; plot only uses :before
        border-left: 1px dashed $toiColorBg;
        box-sizing: border-box;
        content: '';
        display: block;
        left: 50%;
        position: absolute;
        top: 0;
        bottom: 0;
        width: 1px;
    }
    .l-toi {
        @extend .icon-clock;
        @extend .l-flex-row;
        text-align: center;
        //width: $toiW;
        &:before {
            // Clock icon
            @extend .flex-elem;
            margin-right: $interiorMarginSm;
            order: 1;
        }
        &:hover {
            cursor: pointer !important;
            &:before {
                // Icon, change to close box
                color: $colorAlert;
                content: $glyph-icon-x-in-circle !important;
            }
        }
    }

    .l-toi-val {
        //@extend .flex-elem;
        //@extend .grows;
        font-size: 0.7rem;
        white-space: nowrap;
        //right: $toiW + $interiorMargin;
    }

    &.val-to-right {
        .l-toi-val {
            order: 2;
            //right: auto;
            //left: $toiW + $interiorMarginSm;
        }
    }
}

// TOI in tables
@mixin toiIcon() {
    @extend .ui-symbol;
    @include transform(translate(-50%, -50%));
    content: $glyph-icon-clock;
    display: block;
    position: absolute;
    text-shadow: 0 1px 15px black;
    left: 50%;
    top: 0;
    z-index: 2;
}

.tabular,
table {
    tbody, .tbody {
        tr, .tr {
            &:hover {
                td {
                    border-top: 1px dashed $toiColorBg;
                    &:first-child:before {
                        @include toiIcon();
                        color: $toiColorFg;
                    }
                }
            }
            &.l-toi.pinned {
                td {
                    border-top: 1px solid $toiColorBg;
                    &:first-child:before {
                        @include toiIcon();
                        color: $toiColorFg;
                    }
                }
                &:hover {
                    td:first-child:before {
                        content: $glyph-icon-x-in-circle;
                        cursor: pointer;
                    }
                }
            }
        }
    }
}

// TOI in plots
.gl-plot {
    .gl-plot-wrapper-display-area-and-x-axis {
        .l-toi-holder {
            //@include test();
            bottom: nth($plotDisplayArea, 3);
            &:after {
                display: none;
            }
            .l-toi {
                @include test();
                @include transform(translateY(100%));
                bottom: 0;
            }
            //&:hover {
            //    background-color: rgba($toiColorBgHov, 0.1);
            //}
            z-index: 3;
        }
    }
}